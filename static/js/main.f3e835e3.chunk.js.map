{"version":3,"sources":["components/Auth.js","components/Table.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","login","useState","username","password","userdata","setUserdata","Grid","Paper","elevation","style","padding","height","width","margin","align","Avatar","backgroundColor","onSubmit","e","preventDefault","TextField","value","onChange","target","label","name","fullWidth","required","type","FormControlLabel","control","Checkbox","color","Button","variant","useStyles","makeStyles","table","minWidth","BasicTable","houses","classes","TableContainer","component","Table","className","aria-label","TableHead","TableRow","TableCell","TableBody","map","item","scope","id","address","reestrFlatCount","createdAt","theme","button","display","marginTop","spacing","formControl","list","List","getCompanies","data","getHouses","company","setCompany","open","setOpen","useEffect","handleOpen","onClick","FormControl","InputLabel","Select","labelId","onClose","onOpen","MenuItem","index","length","App","isAuth","setIsAuth","setData","setHouses","a","fetch","headers","credentials","method","body","JSON","stringify","response","json","console","log","localStorage","setItem","token","access","company_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3e835e3.chunk.js","sourcesContent":["import {Grid, Paper, Avatar, TextField, Button} from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {useState} from 'react';\n\n\n\nconst Auth = ({login}) => {\n  const [userdata, setUserdata] = useState({username: \"\", password: \"\"});\n\n const paperStyle = {\n        padding: 20,\n        height: '40%',\n        width: 280,\n        margin: '50px auto'\n    }\n    const avatarStyle = {\nbackgroundColor: '#3f51b5'\n    }\n\nconst handlerSubmit = (e) => {\n  e.preventDefault();\n  login(userdata);\n}\n\n\n    return (\n     <Grid>\n<Paper elevation={10} style={paperStyle}>\n    <Grid align='center'>\n    <Avatar style={avatarStyle}> <ExitToAppIcon/></Avatar>\n<h2>Log In</h2>\n    </Grid>\n    <form onSubmit={handlerSubmit}>\n<TextField value={userdata.username} onChange={e => setUserdata({...userdata, username: e.target.value})} label='Username' name='username' fullWidth required />\n<TextField value={userdata.password} onChange={e => setUserdata({...userdata, password: e.target.value})} label='Password' name='password' type='password' fullWidth required/>\n<FormControlLabel\n        control={\n          <Checkbox\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Remember me\"\n      />\n      <Button type='submit' color='primary' variant='contained' fullWidth>LOG IN</Button>\n      </form>\n</Paper>\n    </Grid>\n    )\n}\n\nexport default Auth\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function BasicTable({houses}) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Id</TableCell>\n            <TableCell align=\"center\">Адрес</TableCell>\n            <TableCell align=\"center\">Количество квартир</TableCell>\n            <TableCell align=\"center\">Дата добавления</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {houses.map((item) => (\n            <TableRow key={item.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {item.id}\n              </TableCell>\n              <TableCell align=\"right\">{item.address}</TableCell>\n              <TableCell align=\"right\">{item.reestrFlatCount}</TableCell>\n              <TableCell align=\"right\">{item.createdAt}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport Table from './Table'\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      display: 'block',\n      marginTop: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width: 800,\n      \n    },\n    list: {\n      margin: '0 auto',\n      width: 800,\n    }\n  }));\n\nconst List = ({getCompanies, data, houses, getHouses}) => {\n  \n    const classes = useStyles();\n    const [company, setCompany] = useState([]);\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n      getCompanies()\n    }, [])\n\n    const handleChange = (e) => {\n      setCompany(e.target.value);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n \n    return (\n\n        <div className={classes.list}>\n      <Button className={classes.button} onClick={handleOpen}>\n        Choose a company\n      </Button>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-controlled-open-select-label\">List of the companies</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={company}\n          onChange={handleChange}\n        >\n        {data.map(item => <MenuItem key={item.index} onClick={() => getHouses(item.id)}>{item.name}</MenuItem>)}\n        </Select>\n      </FormControl>\n\n     { houses && houses.length > 0 && <Table houses={houses}/> }\n    </div>\n    )\n}\n\nexport default List\n","import Auth from './components/Auth';\nimport {useState, useEffect} from 'react';\nimport List from './components/List';\n\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false)\n  const [data, setData] = useState([])\n  const [houses, setHouses] = useState([])\n\n\n  const login =  async (userdata) => {\n     const response = await fetch('http://test-alpha.reestrdoma.ru/api/login/', \n     {\n      headers: {\n        'Content-Type': \"application/json\",\n        'Accept': \"application/json\"\n      },\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify(userdata)\n     })\n     const data = await response.json()\n     console.log(data)\n     localStorage.setItem('token', data.data.token.access);\n     setIsAuth(true)\n  }\n\n  const getCompanies = async () => {\n    const token = localStorage.token\n    const response = await fetch(\"http://test-alpha.reestrdoma.ru/api/reestrdoma/companies/\",\n    {\n        headers: {\n            \"accept\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }}\n    )\n    const data = await response.json()\n        setData(data.data);\n} \n\n\n  const getHouses = async (company_id) => {\n    const token = localStorage.token\n    const response = await fetch(`http://test-alpha.reestrdoma.ru/api/reestrdoma/company/houses/${company_id}`, \n    {\n      headers: {\n          \"accept\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n      }}\n    )\n    const data = await response.json()\n    setHouses(data.data)\n  }\n\n  return (\n<>\n { !isAuth && <Auth login={login}/> }\n { isAuth && <List getCompanies={getCompanies}\n  data={data} houses={houses} getHouses={getHouses} /> \n } \n</>\n  )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App /> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}